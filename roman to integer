class Solution {
public:
    int romanToInt(string s) {
        unordered_map<char, int> map;

        map['I'] = 1;
        map['V'] = 5;
        map['X'] = 10;
        map['L'] = 50;
        map['C'] = 100;
        map['D'] = 500;
        map['M'] = 1000;
        
        int ans = 0;
        
        for(int i=0; i<s.length(); i++){
            if(map[s[i]] < map[s[i+1]]){
                ans -= map[s[i]];
            }
            else{
                ans += map[s[i]];
            }
        }
        return ans;
    }
};
class Solution {
public:
    int romanToInt(string s) {
        int res=0;
        s+=' ';
        for(int i=0;i<s.size();){
            if(s[i]=='I' && s[i+1]=='V') { res+=4; i+=2;}
            else if(s[i]=='I' && s[i+1]=='X') { res+=9; i+=2;}
            else if(s[i]=='I') { res++; i++;}
            else if(s[i]=='V') { res+=5; i++;}
            else if(s[i]=='X' && s[i+1]=='L') { res+=40; i+=2;}
            else if(s[i]=='X' && s[i+1]=='C') { res+=90; i+=2;}
            else if(s[i]=='X') { res+=10; i++;} 
            else if(s[i]=='L') { res+=50; i++;}
            else if(s[i]=='C' && s[i+1]=='M') { res+=900; i+=2;}
            else if(s[i]=='C' && s[i+1]=='D') { res+=400; i+=2;}
            else if(s[i]=='C') { res+=100; i++;}
            else if(s[i]=='D') { res+=500; i++;}
            else if(s[i]=='M') { res+=1000; i++;}
            else if(s[i]==' ') break;
        }
        return res;
    }
};
